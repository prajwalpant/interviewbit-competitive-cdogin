/*
Longest Substring Without Repeat
Given a string, find the length of the longest substring without repeating characters. Example: 
The longest substring without repeating letters for
"abcabcbb" is "abc", which the length is 3. For "bbbbb" the longest substring is "b", with the length of 1.
*/
//use two pointer+hashing approach in this
int Solution::lengthOfLongestSubstring(string A)
{
int ptr1=0;
int ptr2=0;
int max_length=0;
unordered_map<char,int> mymap;
while(ptr2<A.size())
{
mymap[A[ptr2]]++;  
 if(mymap[A[ptr2]]>1)
 {
     if(ptr2-ptr1>max_length)
     {
           max_length=ptr2-ptr1;
     }
      while(mymap[A[ptr2]]!=1)
     {
         mymap[A[ptr1]]--;
         ptr1++;
     }
}
ptr2++;
}
max_length=max(ptr2-ptr1,max_length);
return max_length;
}
