/*
Longest Consecutive Sequence
Given an unsorted array of integers, find the length of the longest consecutive elements sequence. Example: Given [100, 4, 200, 1, 3, 2], 
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4. Your algorithm should run in O(n) complexity.
*/
//find the min and max take min and increment 1 every time and use hashin gto check consecutives occurs
//increment the count accordingly
int Solution::longestConsecutive(const vector<int> &A) 
{
int meen=INT_MAX;
int maax=INT_MIN;
unordered_set<int> check;
for(int i=0;i<A.size();i++)
{
    meen=min(meen,A[i]);
    maax=max(maax,A[i]);
    check.insert(A[i]);
}
int prev_count=0,count=0;
while(meen<=maax)
{
if(check.find(meen)!=check.end())
{
count++;
} 
else
{
    if(count>prev_count)
    {
        prev_count=count;
        
    }
    count=0;
}
 meen++;
}
if(count>prev_count){
    prev_count=count;
}
return prev_count;
}
