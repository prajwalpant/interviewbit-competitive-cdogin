//kadanes algorithm 
//implementation 1
//this implementation do not handle case when all numbers are negative in an array

int Solution::maxSubArray(const vector<int> &A) {
 int maxsum=INT_MIN;
 int curr_sum=0;
 for(int i=0;i<A.size();i++)
 {
 curr_sum+=A[i];
 if(curr_sum<0)
 curr_sum=0;
 maxsum=max(curr_sum,maxsum);
 return maxsum;
 }
}

//implementation 2 will pass all test cases
int Solution::maxSubArray(const vector<int> &A) {
    int maximum=-99999;
    int current=0;
    for(int i=0;i<A.size();i++){
        current=max(current+A[i],A[i]);
        maximum=max(current,maximum);
    }
    return maximum;
    
}
