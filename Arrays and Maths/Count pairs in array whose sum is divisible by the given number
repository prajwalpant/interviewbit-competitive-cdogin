/*
Count pairs in array whose sum is divisible by the given number
Given an array of integers A and an integer B, find and return the number of pairs in A whoes sum is divisible by B. Since the answer may be large, return the answer modulo (10^9 + 7). 
Input Format
The first argument given is the integer array A.
The second argument given is the integer B.
Output Format
Return the total number of pairs for which the sum is divisible by B modulo (10^9 + 7).
Constraints
1 <= length of the array <= 100000
1 <= A[i] <= 10^9 
1 <= B <= 10^6
For Example
Input 1:
    A = [1, 2, 3, 4, 5]
    B = 2
Output 1:
    4

Input 2:
    A = [5, 17, 100, 11]
    B = 28
Output 2:
    1
*/


//use modular arithmetic to solve this problem
//(a%mod + b%mod)%mod=0
//keep the count of remainder in a bucket array
//now iterate over that array
#define mod 1000000007
int Solution::solve(vector<int> &A, int B) {
vector< long long > myvector(B,0);
for(long int i=0;i<A.size();i++)
{
  myvector[A[i]%B]++;
}
 long long ans=0;
//as for remainder 0 we can select any two pairs
ans+=(myvector[0]*(myvector[0]-1)/2);
for(long int i=1;i<=B/2;i++){
if(i!=B-i){
    ans+=myvector[i]*myvector[B-i];
}
}
//if it is even then we alsocan select nc from middle remainder
if(B%2==0){
    ans+=(myvector[B/2]*(myvector[B/2]-1)/2);
}
return (int)ans%mod;
}
